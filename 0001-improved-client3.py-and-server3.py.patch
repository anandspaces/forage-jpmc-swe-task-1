From 23b991cab4d537bde6c39dabb446d2eb61d0126d Mon Sep 17 00:00:00 2001
From: anandspaces <anandvaibhaw000@gmail.com>
Date: Tue, 18 Jun 2024 20:53:16 +0530
Subject: [PATCH] improved client3.py and server3.py

---
 client3.py | 16 +++++++++++++---
 server3.py |  4 ++--
 2 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..1334278 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,16 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) / 2 # modified
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if price_b == 0:
+        return None
+    return price_a / price_b
 
 
 # Main
@@ -51,9 +53,17 @@ if __name__ == "__main__":
     for _ in iter(range(N)):
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
+        # Variables to store prices for ratio calculation
+        prices = {}
+
         """ ----------- Update to get the ratio --------------- """
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+        
+        if 'ABC' in prices and 'DEF' in prices:
+            ratio = getRatio(prices['ABC'], prices['DEF'])
+            print("Ratio ABC/DEF: %s" % (ratio))
 
-        print("Ratio %s" % getRatio(price, price))
+        # print("Ratio %s" % getRatio(price, price))
\ No newline at end of file
diff --git a/server3.py b/server3.py
index 1836de2..e70e31c 100644
--- a/server3.py
+++ b/server3.py
@@ -148,7 +148,7 @@ def order_book(orders, book, stock_name):
 
 def generate_csv():
     """ Generate a CSV of order history. """
-    with open('test.csv', 'wb') as f:
+    with open('test.csv', 'w', newline='') as f:
         writer = csv.writer(f)
         for t, stock, side, order, size in orders(market()):
             if t > MARKET_OPEN + SIM_LENGTH:
@@ -158,7 +158,7 @@ def generate_csv():
 
 def read_csv():
     """ Read a CSV or order history into a list. """
-    with open('test.csv', 'rt') as f:
+    with open('test.csv', 'r') as f:
         for time, stock, side, order, size in csv.reader(f):
             yield dateutil.parser.parse(time), stock, side, float(order), int(size)
 
-- 
2.43.0.windows.1

